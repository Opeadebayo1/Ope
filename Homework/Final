{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependencies\n",
    "%matplotlib inline\n",
    "import tweepy\n",
    "import json\n",
    "import pandas as pd\n",
    "import time\n",
    "import numpy as np\n",
    "from datetime import datetime\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "\n",
    "# Import and Initialize Sentiment Analyzer\n",
    "from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer\n",
    "analyzer = SentimentIntensityAnalyzer()\n",
    "\n",
    "# Twitter API Keys\n",
    "consumer_key = \"JMK1jCxlewvpZm7KuNOKdBOx1\"\n",
    "consumer_secret = \"5BL3WwK5iu7SAioFy8mZbDzJN8AQeyjtPxKRfhlz5xZ7fgP6fQ\"\n",
    "access_token = \"201086971-yqXToCo50DaFkBpJHJfxoZ6yiZDn8FiMb0x657WH\"\n",
    "access_token_secret = \"c5y47MU7xRqWhDWJ03XJyoJBqJnEuDm28K6sboL59D5VM\"\n",
    "\n",
    "# Setup Tweepy API Authentication\n",
    "auth = tweepy.OAuthHandler(consumer_key, consumer_secret)\n",
    "auth.set_access_token(access_token, access_token_secret)\n",
    "api = tweepy.API(auth, parser=tweepy.parsers.JSONParser())\n",
    "\n",
    "# Target User Accounts\n",
    "news_sources = [\"BBCWorld\", \"CBSNews\", \"CNN\", \"FoxNews\", \"NYT\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "tweet_data = {\n",
    "    \"tweet_source\": [],\n",
    "    \"tweet_text\": [],\n",
    "    \"tweet_date\": [],\n",
    "    \"tweet_vader_score\": [],\n",
    "    \"tweet_neg_score\": [],\n",
    "    \"tweet_pos_score\": [],\n",
    "    \"tweet_neu_score\": []\n",
    "}\n",
    "\n",
    "# Loop through each user\n",
    "for news_agency in news_sources:\n",
    "\n",
    "    # Loop through 5 pages of tweets (total 100 tweets)\n",
    "    for x in range(5):\n",
    "\n",
    "        # Get all tweets from home feed\n",
    "        public_tweets = api.user_timeline(news_agency, page=x)\n",
    "\n",
    "        # Loop through all tweets\n",
    "        for tweet in public_tweets:\n",
    "\n",
    "            # Run Vader Analysis on each tweet\n",
    "            ps = analyzer.polarity_scores(tweet['text'])\n",
    "            compound = ps[\"compound\"]\n",
    "            pos = ps['pos']\n",
    "            neu = ps['neu']\n",
    "            neg = ps['neg']\n",
    "            # source\n",
    "            # text\n",
    "            # date\n",
    "            #compound = analyzer.polarity_scores(tweet[\"text\"])[\"compound\"]\n",
    "            #pos = analyzer.polarity_scores(tweet[\"text\"])[\"pos\"]\n",
    "           # neu = analyzer.polarity_scores(tweet[\"text\"])[\"neu\"]\n",
    "           # neg = analyzer.polarity_scores(tweet[\"text\"])[\"neg\"]\n",
    "\n",
    "            # Add each value to the appropriate array\n",
    "            #tweet_text\n",
    "            \n",
    "            #tweet_date\n",
    "            \n",
    "            #tweet_vader_score\n",
    "            #tweet_neg_score\n",
    "            #tweet_pos_score\n",
    "            #tweet_neu_score\n",
    "            tweet_data[\"tweet_vader_score\"].append(compound)\n",
    "            tweet_data[\"tweet_pos_score\"].append(pos)\n",
    "            tweet_data[\"tweet_neu_score\"].append(neu)\n",
    "            tweet_data[\"tweet_neg_score\"].append(neg)\n",
    "            \n",
    "             # All data is grabbed from the JSON returned by Twitter\n",
    "            tweet_data[\"tweet_source\"].append(tweet[\"user\"][\"name\"])\n",
    "            tweet_data[\"tweet_text\"].append(tweet[\"text\"])\n",
    "            tweet_data[\"tweet_date\"].append(tweet[\"created_at\"])\n",
    " \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "# turn tweet dictionary into dataframe based on the keys\n",
    "tweet_df = pd.DataFrame(tweet_data, columns=[\"tweet_source\", \n",
    "                                             \"tweet_text\", \n",
    "                                             \"tweet_date\",\n",
    "                                             \"tweet_vader_score\",\n",
    "                                             \"tweet_pos_score\",\n",
    "                                             \"tweet_neu_score\",\n",
    "                                             \"tweet_neg_score\"])\n",
    "tweet_df.head()\n",
    "\n",
    "\n",
    "# Export to CSV\n",
    "tweet_df.to_csv('Data.csv', header = True, index = False)\n",
    "#file_name = str(time.strftime(\"%m-%d-%y\")) + \"-tweets.csv\"\n",
    "#tweet_df.to_csv(\"analysis/\" + file_name, encoding=\"utf-8\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# for the tweet_date column, turn the dates into datetime using pd.to_datetime(date_string)\n",
    "tweet_df[\"tweet_date\"] = pd.to_datetime(tweet_df[\"tweet_date\"])\n",
    "\n",
    "# sort the dataframe by date\n",
    "tweet_df.sort_values(\"tweet_date\", inplace=True)\n",
    "tweet_df.reset_index(drop=True, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0xf4d4410>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# create a scatter plot of sentiment (see solutions)\n",
    "\n",
    "# Build scatter plot for tracking tweet polarity by tweet history\n",
    "# Note how a few data munging tricks were used to obtain (-100 -> 0 tick marks)\n",
    "plt.scatter(np.arange(-len(tweet_df[tweet_df[\"tweet_source\"] == \"BBC News (World)\"]), 0, 1), \n",
    "            tweet_df[tweet_df[\"tweet_source\"] == \"BBC News (World)\"][\"tweet_vader_score\"],\n",
    "            edgecolor=\"black\", linewidths=1, marker=\"o\", color=\"skyblue\", s=75,\n",
    "            alpha=0.8, label=\"BBC\")\n",
    "\n",
    "plt.scatter(np.arange(-len(tweet_df[tweet_df[\"tweet_source\"] == \"CBS News\"]), 0, 1), \n",
    "            tweet_df[tweet_df[\"tweet_source\"] == \"CBS News\"][\"tweet_vader_score\"],\n",
    "            edgecolor=\"black\", linewidths=1, marker=\"o\", color=\"green\", s=75,\n",
    "            alpha=0.8, label=\"CBS\")\n",
    "\n",
    "plt.scatter(np.arange(-len(tweet_df[tweet_df[\"tweet_source\"] == \"CNN\"]), 0, 1), \n",
    "            tweet_df[tweet_df[\"tweet_source\"] == \"CNN\"][\"tweet_vader_score\"],\n",
    "            edgecolor=\"black\", linewidths=1, marker=\"o\", color=\"red\", s=75,\n",
    "            alpha=0.8, label=\"CNN\")\n",
    "\n",
    "plt.scatter(np.arange(-len(tweet_df[tweet_df[\"tweet_source\"] == \"Fox News\"]), 0, 1), \n",
    "            tweet_df[tweet_df[\"tweet_source\"] == \"Fox News\"][\"tweet_vader_score\"],\n",
    "            edgecolor=\"black\", linewidths=1, marker=\"o\", color=\"b\", s=75,\n",
    "            alpha=0.8, label=\"Fox\")\n",
    "\n",
    "plt.scatter(np.arange(-len(tweet_df[tweet_df[\"tweet_source\"] == \"The New York Times\"]), 0, 1), \n",
    "            tweet_df[tweet_df[\"tweet_source\"] == \"The New York Times\"][\"tweet_vader_score\"],\n",
    "            edgecolor=\"black\", linewidths=1, marker=\"o\", color=\"gold\", s=75,\n",
    "            alpha=0.8, label=\"New York Times\")\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"Sentiment Analysis of Media Tweets (%s)\" % time.strftime(\"%x\"))\n",
    "plt.ylabel(\"Tweet Polarity\")\n",
    "plt.xlabel(\"Tweets Ago\")\n",
    "plt.xlim([-105, 5])\n",
    "plt.xticks([-100, -80, -60, -40, -20, 0], [100, 80, 60, 40, 20, 0])\n",
    "plt.ylim([-1.05, 1.05])\n",
    "plt.grid(True)\n",
    "\n",
    "# Create a legend\n",
    "lgnd = plt.legend(fontsize=\"small\", mode=\"Expanded\", \n",
    "                  numpoints=1, scatterpoints=1, \n",
    "                  loc=\"upper left\", bbox_to_anchor=(1,1), title=\"Media Sources\", \n",
    "                  labelspacing=0.5)\n",
    "\n",
    "\n",
    "\n",
    "# Show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style>\n",
       "    .dataframe thead tr:only-child th {\n",
       "        text-align: right;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tweet_vader_score</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>tweet_source</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>BBC News (World)</th>\n",
       "      <td>-0.033150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CBS News</th>\n",
       "      <td>-0.066105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>CNN</th>\n",
       "      <td>0.039686</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fox News</th>\n",
       "      <td>-0.023868</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>NYT</th>\n",
       "      <td>-0.002218</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  tweet_vader_score\n",
       "tweet_source                       \n",
       "BBC News (World)          -0.033150\n",
       "CBS News                  -0.066105\n",
       "CNN                        0.039686\n",
       "Fox News                  -0.023868\n",
       "NYT                       -0.002218"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# group the sources by sentiment from teh tweet dataframe\n",
    "# Average all polarities by news source\n",
    "tweet_df_polarity = tweet_df.groupby([\"tweet_source\"]).mean()[\"tweet_vader_score\"]\n",
    "\n",
    "# View the polarities\n",
    "pd.DataFrame(tweet_df_polarity)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "Unknown property linewidths",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-17-fcee489be237>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      3\u001b[0m             \u001b[0mtweet_df\u001b[0m\u001b[1;33m[\u001b[0m\u001b[0mtweet_df\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"tweet_source\"\u001b[0m\u001b[1;33m]\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m\"BBC News (World)\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;34m\"tweet_vader_score\"\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      4\u001b[0m             \u001b[0medgecolor\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"black\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mlinewidths\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mmarker\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"o\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m\"skyblue\"\u001b[0m\u001b[1;33m,\u001b[0m \u001b[0ms\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;36m75\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m----> 5\u001b[1;33m             alpha=0.8, label=\"BBC\")\n\u001b[0m",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\matplotlib\\pyplot.py\u001b[0m in \u001b[0;36mbar\u001b[1;34m(*args, **kwargs)\u001b[0m\n\u001b[0;32m   2625\u001b[0m                       mplDeprecation)\n\u001b[0;32m   2626\u001b[0m     \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m-> 2627\u001b[1;33m         \u001b[0mret\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0max\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mbar\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2628\u001b[0m     \u001b[1;32mfinally\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2629\u001b[0m         \u001b[0max\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_hold\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mwashold\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\matplotlib\\__init__.py\u001b[0m in \u001b[0;36minner\u001b[1;34m(ax, *args, **kwargs)\u001b[0m\n\u001b[0;32m   1708\u001b[0m                     warnings.warn(msg % (label_namer, func.__name__),\n\u001b[0;32m   1709\u001b[0m                                   RuntimeWarning, stacklevel=2)\n\u001b[1;32m-> 1710\u001b[1;33m             \u001b[1;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0max\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m*\u001b[0m\u001b[0margs\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;33m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   1711\u001b[0m         \u001b[0mpre_doc\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0minner\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m__doc__\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   1712\u001b[0m         \u001b[1;32mif\u001b[0m \u001b[0mpre_doc\u001b[0m \u001b[1;32mis\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\matplotlib\\axes\\_axes.py\u001b[0m in \u001b[0;36mbar\u001b[1;34m(self, *args, **kwargs)\u001b[0m\n\u001b[0;32m   2148\u001b[0m                 \u001b[0mlabel\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'_nolegend_'\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2149\u001b[0m                 )\n\u001b[1;32m-> 2150\u001b[1;33m             \u001b[0mr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mupdate\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m   2151\u001b[0m             \u001b[0mr\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mget_path\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0m_interpolation_steps\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;36m100\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m   2152\u001b[0m             \u001b[1;32mif\u001b[0m \u001b[0morientation\u001b[0m \u001b[1;33m==\u001b[0m \u001b[1;34m'vertical'\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\matplotlib\\artist.py\u001b[0m in \u001b[0;36mupdate\u001b[1;34m(self, props)\u001b[0m\n\u001b[0;32m    845\u001b[0m         \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    846\u001b[0m             ret = [_update_property(self, k, v)\n\u001b[1;32m--> 847\u001b[1;33m                    for k, v in props.items()]\n\u001b[0m\u001b[0;32m    848\u001b[0m         \u001b[1;32mfinally\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    849\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0meventson\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mstore\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\matplotlib\\artist.py\u001b[0m in \u001b[0;36m<listcomp>\u001b[1;34m(.0)\u001b[0m\n\u001b[0;32m    845\u001b[0m         \u001b[1;32mtry\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    846\u001b[0m             ret = [_update_property(self, k, v)\n\u001b[1;32m--> 847\u001b[1;33m                    for k, v in props.items()]\n\u001b[0m\u001b[0;32m    848\u001b[0m         \u001b[1;32mfinally\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    849\u001b[0m             \u001b[0mself\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0meventson\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mstore\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;32m~\\Anaconda3\\lib\\site-packages\\matplotlib\\artist.py\u001b[0m in \u001b[0;36m_update_property\u001b[1;34m(self, k, v)\u001b[0m\n\u001b[0;32m    838\u001b[0m                 \u001b[0mfunc\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mgetattr\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mself\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;34m'set_'\u001b[0m \u001b[1;33m+\u001b[0m \u001b[0mk\u001b[0m\u001b[1;33m,\u001b[0m \u001b[1;32mNone\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    839\u001b[0m                 \u001b[1;32mif\u001b[0m \u001b[1;32mnot\u001b[0m \u001b[0mcallable\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfunc\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m--> 840\u001b[1;33m                     \u001b[1;32mraise\u001b[0m \u001b[0mAttributeError\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'Unknown property %s'\u001b[0m \u001b[1;33m%\u001b[0m \u001b[0mk\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m    841\u001b[0m                 \u001b[1;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mv\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m    842\u001b[0m \u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mAttributeError\u001b[0m: Unknown property linewidths"
     ]
    },
    {
     "data": {
      "image/png": "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\npCYMviQ18f+GmWq6NWLIwgAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0xfe615b0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Store all polarities in a tuple\n",
    "plt.bar(np.arange(-len(tweet_df[tweet_df[\"tweet_source\"] == \"BBC News (World)\"]), 0, 1), \n",
    "            tweet_df[tweet_df[\"tweet_source\"] == \"BBC News (World)\"][\"tweet_vader_score\"],\n",
    "            edgecolor=\"black\", linewidths=1, marker=\"o\", color=\"skyblue\", s=75,\n",
    "            alpha=0.8, label=\"BBC\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
